@import "../variables";

$input-color: $c-text !default;
$input-color-active: $c-primary !default;
$input-color-invalid: #d12727 !default;
$input-color-disabled: $c-dark-variant !default;
$input-font-family: $body-font-family-secondary !default;
$input-font-size: $font-size-big-mobile !default;
$input-font-size-desktop: $font-size-big-desktop !default;
$input-font-weight: $body-font-weight-secondary !default;
$input-line-height: 1.6 !default;
$input__label-focus-font-size: $font-size-small-mobile !default;
$input__label-focus-font-size-desktop: $font-size-extra-small-desktop !default;
$input__label-transition: all 150ms ease-in-out !default;
$input__bar-transition: all 150ms ease-in-out !default;
$input__error-message-font-family: $body-font-family-primary !default;
$input__error-message-font-size: $font-size-small-mobile !default;

@mixin move-label-up {
  top: calc((#{$input__label-focus-font-size / 2}) - 5px);
  font-size: $input__label-focus-font-size;
  @media screen and (min-width: $desktop-min) {
    font-size: $input__label-focus-font-size-desktop;
  }
}

.sf-input {
  $this: &;
  box-sizing: border-box;
  position: relative;
  margin-top: 5px;
  color: $input-color;
  font-family: $input-font-family;
  font-size: $input-font-size;
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  @media screen and (min-width: $desktop-min) {
    font-size: $input-font-size-desktop;
  }
  & input {
    position: relative;
    z-index: 1;
    box-sizing: border-box;
    display: block;
    width: 100%;
    padding: 5px 0;
    border-width: 0 0 1px 0;
    border-color: $c-light;
    background-color: transparent;
    outline: none;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    &:focus ~ #{$this}__label {
      @include move-label-up;
      color: $input-color-active;
    }
    &:focus ~ #{$this}__bar::before,
    &:focus ~ #{$this}__bar::after {
      width: 50%;
    }
    &:required ~ #{$this}__label::after {
      content: " *";
    }
    &:disabled ~ #{$this}__label {
      color: $input-color-disabled;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }
  }
  &__bar {
    position: relative;
    display: block;
    &::before,
    &::after {
      position: absolute;
      bottom: 0;
      width: 0;
      height: 1px;
      background-color: $input-color-active;
      transition: $input__bar-transition;
      content: "";
    }
    &::before {
      left: 50%;
    }
    &::after {
      right: 50%;
    }
  }
  &__label {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    transition: $input__label-transition;
    &::after {
      color: $input-color-active;
    }
  }
  &__error-message {
    margin-top: 5px;
    color: $input-color-invalid;
    font-family: $input__error-message-font-family;
    font-size: $input__error-message-font-size;
  }
  &--invalid {
    input {
      border-color: $input-color-invalid;

      &:focus ~ #{$this}__label {
        &,
        &:after {
          color: $input-color-invalid;
        }
      }
      &:required ~ #{$this}__label::after {
        color: $input-color-invalid;
      }
    }
    #{$this}__bar {
      &::before,
      &::after {
        background-color: $input-color-invalid;
      }
    }
    @at-root #{&}#{$this}--has-text {
      #{$this}__label {
        color: $input-color-invalid;
      }
    }
  }
  &--has-text {
    #{$this}__label {
      @include move-label-up;
    }
  }
}
