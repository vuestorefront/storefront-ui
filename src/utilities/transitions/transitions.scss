$transition-fade: opacity .15s linear;
$transition-base: $transition-fade;
$transition-slide: all .25s cubic-bezier(1.0, 0.5, 0.8, 1.0);
$transition-slide-transform-size: 400px;

// mixins

@mixin transition($transition...) {
  @if length($transition) == 0 {
    transition: $transition-base;
  } @else {
    transition: $transition;
  }
}

@mixin transition-fade() {
  &-enter-active,
  &-leave-active {
    @include transition($transition-fade);
  }
  &-enter,
  &-leave-to {
    opacity: 0;
  }
}

@mixin transition-slide($direction: "left") {
  &-enter-active,
  &-leave-active {
    transition: $transition-slide;
  }
  &-enter,
  &-leave-to {
    @if $direction == "bottom" {
      transform: translateY($transition-slide-transform-size);
    } @elseif $direction == "top" {
      transform: translateY(-$transition-slide-transform-size);
    } @elseif $direction == "left" {
      transform: translateX(-$transition-slide-transform-size);
    } @else {
      transform: translateX($transition-slide-transform-size);
    }
    opacity: 0;
  }
}

@mixin transition-slide-fade($direction: "left") {
  @include transition-slide($direction);
  &-enter-active {
    transition: $transition-fade;
  }
}

// slide-left

.slide-left-enter-active {
  -webkit-animation: slide-left 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
          animation: slide-left 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

.slide-left-leave-active{
-webkit-animation: slide-left 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both reverse;
        animation: slide-left 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both reverse;
}

@-webkit-keyframes slide-left {
  0% {
    -webkit-transform: translateX(-1000px);
            transform: translateX(-1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
  }
}
@keyframes slide-left {
  0% {
    -webkit-transform: translateX(-1000px);
            transform: translateX(-1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
  }
}

// slide-right
.slide-right-enter-active {
  -webkit-animation: slide-right 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
          animation: slide-right 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

.slide-right-leave-active{
-webkit-animation: slide-right 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both reverse;
        animation: slide-right 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both reverse;
}

@-webkit-keyframes slide-right {
  0% {
    -webkit-transform: translateX(1000px);
            transform: translateX(1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
  }
}
@keyframes slide-right {
  0% {
    -webkit-transform: translateX(1000px);
            transform: translateX(1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0);
    opacity: 1;
  }
}

// classes
// TODO: Refactor top/bottom slide/collapse transitions - they are not working correctly with conditional rendering
.fade {
  @include transition-fade();
}
.collapse-bottom {
  @include transition-slide("bottom");
}
.collapse-top {
  @include transition-slide("top");
}
.fade-slide {
  @include transition-slide-fade();
}
.fade-collapse {
  @include transition-slide-fade("bottom");
}

