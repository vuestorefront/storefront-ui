name: CI
on:
  push:
    branches:
      - v2
      - v2-develop
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - edited

jobs:
  cache:
    name: Create cache for all steps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: NOT_GENERATE_ICON=true && yarn --immutable

  verify-collaborator:
    name: Verify collaborator
    needs: [cache]
    runs-on: ubuntu-latest
    outputs:
      isCollaborator: ${{ steps.collaborator.outputs.isCollaborator }}
    steps:
      - id: collaborator
        name: Check if user is a collaborator
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}" \
               | grep -q "Collaborator not found" \
               && echo "isCollaborator=false" >> $GITHUB_OUTPUT \
               || echo "isCollaborator=true" >> $GITHUB_OUTPUT

  commit-lint:
    name: Validate PR Title (conventional-commit)
    needs: [cache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: NOT_GENERATE_ICON=true && yarn --immutable
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - uses: JulienKode/pull-request-name-linter-action@v0.5.0

  lint:
    name: Lint
    needs: [cache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run linters
        run: yarn lint

  build:
    name: Build Nuxt, Next
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run build
        run: yarn build

  build-docs:
    name: Build Docs
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run build
        run: yarn build:docs

  build-release:
    name: Build packages for release
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run build
        run: yarn build:release

  cypress-vue:
    name: Run cypress tests(Vue)
    needs: [cache, lint, verify-collaborator]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Pre-Cypress (build all dependencies)
        run: yarn test:ci-pre:vue
      - name: Cypress run
        uses: cypress-io/github-action@v5.7.2
        with:
          browser: chrome
          working-directory: apps/test/vue
          component: true
        env:
          CYPRESS_COVERAGE: true
      - name: Post-Cypress (generate coverage)
        run: cd apps/test/vue; yarn generate-coverage
      - name: SonarCloud Scan
        if: ${{ needs.verify-collaborator.outputs.isCollaborator == 'true' && (success() || failure()) }}
        uses: SonarSource/sonarcloud-github-action@v1.9
        with:
          projectBaseDir: packages/sfui/frameworks/vue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_VUE }}

  cypress-react:
    name: Run cypress tests(React)
    needs: [cache, lint, verify-collaborator]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Pre-Cypress (build all dependencies)
        run: yarn test:ci-pre:react
      - name: Cypress run
        uses: cypress-io/github-action@v5.7.2
        with:
          browser: chrome
          working-directory: apps/test/react
          component: true
        env:
          CYPRESS_COVERAGE: true
      - name: Post-Cypress (generate coverage)
        run: cd apps/test/react; yarn generate-coverage
      - name: SonarCloud Scan
        if: ${{ needs.verify-collaborator.outputs.isCollaborator == 'true' && (success() || failure()) }}
        uses: SonarSource/sonarcloud-github-action@v1.9
        with:
          projectBaseDir: packages/sfui/frameworks/react
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_REACT }}

  release-canary:
    name: Release canary package
    needs: [build, build-release, cypress-react, cypress-vue]
    if: ${{ github.ref == 'refs/heads/v2-develop' }}
    # Can't use 'configure-enviroment' because it fails on dev branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: yarn --immutable
      - name: Bump package version
        run: yarn changeset version --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build package
        run: yarn build:release
      - name: Publish canary version
        run: yarn changeset publish --tag canary
        env:
          # Needs access to publish to npm
          # refresh token before Saturday, May 25, 2024
          NPM_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}

  release-next:
    name: Release release candidate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Save head commit message
        id: commit_message
        run: echo "result=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT
      - name: Publish release-candidate
        # If this is any `v2-release/**` branch AND last commit is made by changeset action and its commit message is with "rc" suffix, logic can be found in "release-changeset-changelog.yml
        if: ${{ startsWith( github.ref, 'refs/heads/v2-release' ) && steps.commit_message.output.result  == '[ci] - release (rc)' }}
        run: echo "Publish now"
