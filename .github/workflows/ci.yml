name: CI
on:
  push:
    branches:
      - v2
      - v2-develop
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  cache:
    name: Create cache for all steps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: NOT_GENERATE_ICON=true && yarn --immutable

  verify-collaborator:
    name: Verify collaborator
    needs: [cache]
    runs-on: ubuntu-latest
    setps:
      - name: Authenticate user
        uses: actions/github-script@v4
        with:
        script: |
          const token = process.env.GITHUB_TOKEN;
          const octokit = new Octokit({ auth: token });
          const user = await octokit.users.getByUsername({ username: context.actor });
      - name: Check if user is a collaborator
        uses: actions/github-script@v4
        with:
          script: |
            const token = process.env.GITHUB_TOKEN;
            const octokit = new Octokit({ auth: token });
            const { data: isCollaborator } = await octokit.repos.checkCollaborator({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: user.login,
            });
            if (!isCollaborator) {
              core.setFailed(`User \${user.login} is not a collaborator in the SFUI repository`)
            }

  commit-lint:
    name: Validate PR Title (conventional-commit)
    needs: [cache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: NOT_GENERATE_ICON=true && yarn --immutable
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - uses: JulienKode/pull-request-name-linter-action@v0.5.0

  lint:
    name: Lint
    needs: [cache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run linters
        run: yarn lint

  build:
    name: Build Nuxt, Next, Docs
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run build
        run: yarn build

  build-release:
    name: Build packages for release
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run build
        run: yarn build:release

  cypress-vue:
    name: Run cypress tests(Vue)
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Cypress run
        uses: cypress-io/github-action@v5.5.0
        with:
          command: yarn test:ci:vue
      - name: SonarCloud Scan
        if: jobs.verify-collaborator.result == 'success' && (success() || failure())
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: packages/sfui/frameworks/vue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_VUE }}

  cypress-react:
    name: Run cypress tests(react)
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Cypress run
        uses: cypress-io/github-action@v5.5.0
        with:
          command: yarn test:ci:react
      - name: SonarCloud Scan
        if: jobs.verify-collaborator.result == 'success' && (success() || failure())
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: packages/sfui/frameworks/react
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_REACT }}
