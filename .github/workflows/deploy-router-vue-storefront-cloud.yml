name: Deploy nginx router
on:
  push:
    branches:
      - v2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - shell: bash
        run: |
          echo "1.0.`date +%s`" > version.txt
      - name: Upload version artifact
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version.txt
      - name: Get the version
        id: get_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: sfui-storefrontcloud-io/vue-storefront:${{ steps.get_version.outputs.VERSION }}
          registry: registry.storefrontcloud.io
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/router/docker/Dockerfile
          buildoptions: "--compress"
  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      deployments: write

    steps:
      - name: Download version artifact
        uses: actions/download-artifact@v3
        with:
          name: version
      - name: Get the version
        id: get_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ github.token }}
          target_url: https://docs.storefrontui.io
          environment: router
          initial_status: in_progress
      - name: Deploy to demo.storefrontui.io
        run: |
          if curl -s -H 'X-User-Id: ${{ secrets.CLOUD_USERNAME }}'  -H 'X-Api-Key: ${{ secrets.CLOUD_PASSWORD }}' -H 'Content-Type: application/json' -X PATCH -d '{"front_version":"${{ steps.get_version.outputs.VERSION }}"}' https://farmer.vuestorefront.cloud/instance/sfui-europe-west1-gcp-storefrontcloud-io | grep -q '"code":200'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://docs.storefrontui.io
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://docs.storefrontui.io
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
